{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/LogIn.js","components/UserProfile.js","components/Credits.js","components/Debits.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","class","this","props","accountBalance","Component","Home","src","alt","to","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","userName","password","onSubmit","htmlFor","type","onChange","UserProfile","memberSince","Credits","credits","map","credit","date","slice","key","id","amount","description","addCredit","placeholder","Debits","debits","debit","addDebit","Header","App","logInInfo","newUser","currentUser","cred","parseFloat","isNaN","console","log","nextId","newDate","Date","toISOString","split","newCred","Math","round","Number","EPSILON","deb","newDeb","componentDidMount","a","linkToCredits","axios","get","debs","debt","data","forEach","response","status","creds","credt","className","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c652c4cf.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n      <div>\n        <h2 class=\"balance\">\n        Balance: {this.props.accountBalance}\n        </h2>\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","import React, { Component } from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render(){\n    return (\n      <div class=\"Home\">\n        <img class=\"App-logo\" src=\"https://cdn.iconscout.com/icon/free/png-256/bank-1417507-1201209.png\" alt=\"bank\"/>\n        <h1>Bank of React</h1>\n\n        <h2 class=\"Home-links\">\n        <div>\n        <Link to=\"/logIn\">Change User</Link>\n        </div>\n        <div>\n        <Link to=\"/userProfile\">User Profile</Link>\n        </div>\n        <div>\n        <Link to=\"/debits\">Debits</Link>\n        </div>\n        <div>\n        <Link to=\"/credits\">Credits</Link>\n        </div>\n        </h2>\n\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nclass LogIn extends Component {\n  constructor () {\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: '',\n      },\n      redirect: false\n    }\n  }\n\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n\n  render () {\n    if (this.state.redirect) {\n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div class=\"field\">\n            <label htmlFor=\"userName\">User Name </label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div class=\"field\">\n            <label htmlFor=\"password\">Password </label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button class=\"field\">Log In</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogIn\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n      </div>\n\n\n    );\n  }\n}\n\nexport default UserProfile;","import React from 'react'\n\nconst Credits = (props) => {\n\n  let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    })\n  }\n\n  return (\n    <div class=\"credits-debits\">\n      <h1>Credits</h1>\n      <ul>\n        {creditsView()}\n      </ul>\n      <form onSubmit={props.addCredit} class=\"field\">\n        <input type=\"text\" name=\"description\" placeholder=\"enter description\"/>\n        <input type=\"text\" name=\"amount\" placeholder=\"enter value\"/>\n        <button type=\"submit\">Add Credit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Credits;","import React from 'react'\n\nconst Debits = (props) => {\n\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    })\n  }\n\n  return (\n    <div class=\"credits-debits\">\n      <h1>Debits</h1>\n      <ul>\n        {debitsView()}\n      </ul>\n      <form onSubmit={props.addDebit} class=\"field\">\n        <input type=\"text\" name=\"description\" placeholder=\"enter description\"/>\n        <input type=\"text\" name=\"amount\" placeholder=\"enter value\"/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Debits;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div class=\"App-header\">\n        <img src=\"https://cdn.iconscout.com/icon/free/png-256/bank-1417507-1201209.png\" alt=\"bank\"/>\n        <Link to=\"/\">Home </Link>\n        <Link to=\"/userProfile\">User Profile </Link>\n        <Link to=\"/debits\">Debits </Link>\n        <Link to=\"/credits\">Credits </Link>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport LogIn from './components/LogIn';\nimport UserProfile from './components/UserProfile';\n\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport Header from './components/Header';\nimport AccountBalance from './components/AccountBalance';\n\nimport './App.css';\nimport axios from 'axios';\nimport nextId from \"react-id-generator\";\n\n// Source for rounding to two decimal places: https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: 'joe_shmo',\n        memberSince: '07/23/96'\n      },\n      debits: [],\n      credits: []\n    }\n  }\n\n  mockLogIn = (logInInfo) => {\n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  // Run after submitting a new credit form\n  addCredit = (cred) => {\n    cred.preventDefault();\n\n    // Gather information about the new credit\n    const description = cred.target[0].value;\n    const amount = parseFloat(cred.target[1].value);\n    if (isNaN(amount)) {console.log(\"bad input\"); return;} // Return if ill-formatted value\n\n    let id = nextId();      // Using react-id-generator which I found online\n    let newDate = new Date();\n    newDate = newDate.toISOString().split('T')[0]; // Source: https://stackoverflow.com/questions/23593052/format-javascript-date-as-yyyy-mm-dd\n\n    // Create new credit object to add to the list\n    const newCred = {\n      id: id,\n      amount: amount,\n      date: newDate,\n      description: description\n    };\n\n    // Add new credit and update account balance\n    this.setState((state, props) => {\n      return {\n        credits: [...state.credits, newCred],\n        accountBalance : Math.round((this.state.accountBalance + amount + Number.EPSILON) * 100) / 100,\n      }\n    });\n  }\n\n  // Run after submitting a new debit form, similar to addCredit\n  addDebit = (deb) => {\n    deb.preventDefault();\n\n    const description = deb.target[0].value;\n    const amount = parseFloat(deb.target[1].value);\n    if (isNaN(amount)) {console.log(\"bad input\"); return;} // Return if ill-formatted value\n\n    let id = nextId();\n    let newDate = new Date();\n    newDate = newDate.toISOString().split('T')[0];\n    const newDeb = {\n      id: id,\n      amount: amount,\n      date: newDate,\n      description: description\n    };\n\n    this.setState((state, props) => {\n      return {\n        debits: [...state.debits, newDeb],\n        accountBalance : Math.round((this.state.accountBalance - amount + Number.EPSILON) * 100) / 100,\n      }\n    });\n  }\n\n  // Request credits and debits from the API and put them in the starting debits and credits arrays\n  componentDidMount = async () => {\n    // API links\n    let linkToDebits = \"https://moj-api.herokuapp.com/debits\";\n    let linkToCredits = \"https://moj-api.herokuapp.com/credits\";\n\n    // Call debits, and add each one to the debits list\n    try\n    {\n      let debs = await axios.get(linkToDebits);\n\n      // Add up debits to get total debt, to be subtracted from balance\n      let debt = 0;\n      debs.data.forEach(deb => {\n        debt += deb.amount;\n      });\n\n      // Update balance and list of debits\n      this.setState({\n        accountBalance: Math.round((this.state.accountBalance - debt + Number.EPSILON) * 100) / 100,\n        debits: debs.data\n      });\n    }\n    catch (error){\n      if (error.response)\n      {\n          console.log(error.response.data);\n          console.log(error.response.status);\n      }\n    }\n\n    // Call credits, and add each one to the credits list\n    try\n    {\n      let creds = await axios.get(linkToCredits);\n\n      // Add up credits to get total credt (not a word) to add to balance\n      let credt = 0;\n      creds.data.forEach(cred => {\n        credt += cred.amount;\n      });\n\n      // Update balance and list of credits\n      this.setState({\n        accountBalance: Math.round((this.state.accountBalance + credt + Number.EPSILON) * 100) / 100,\n        credits: creds.data\n      });\n    }\n    catch (error){\n      if (error.response)\n      {\n        console.log(error.response.data);\n        console.log(error.response.status);\n      }\n    }\n\n  }\n\n  render() {\n\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n\n    const UserProfileComponent = () => (\n      <div>\n      <Header />\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n      </div>\n    );\n\n    const LogInComponent = () => (\n      <div>\n      <Header/>\n      <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\n      </div>\n    );\n\n    const CreditsComponent = () => (\n      <div>\n      <Header />\n      <Credits addCredit={this.addCredit} credits={this.state.credits} />\n      <AccountBalance accountBalance={this.state.accountBalance}/>\n      </div>\n    );\n\n    const DebitsComponent = () => (\n      <div>\n      <Header />\n      <Debits addDebit={this.addDebit} debits={this.state.debits} />\n      <AccountBalance accountBalance={this.state.accountBalance}/>\n      </div>\n    );\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}